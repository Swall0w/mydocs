====================================
Linux システム関連
====================================

:著者: Masato

概要
====================================
データベースの構築から、インストール、ipの固定までのhow to をまとめていきます。

データベース
====================================

Linux バージョン確認
====================================

Cent OS
------------------------------------
Cent OSのバージョン確認::

    $ cat /etc/redhat-releace
    CentOS release 6.8 (Final)

アーキテクチャを確認する。
------------------------------------
OSのバージョン確認コマンド::

    $ arch
    X86_64 <- 64bitの場合
    i686   <- 32bitの場合
    $ uname -a

FTPコマンドでファイル転送
====================================
FTPコマンドは、ホスト名とポート番号を指定して起動します。すると、ユーザ名とパスワードを聞いてくるので入力します。ユーザ認証がOKな場合は各種FTPコマンドが使えます。

================ ====================================================
fptコマンド         機能
================ ====================================================
ftp                 FTPを起動する。
ls                  リモートのファイルの一覧を表示
pwd                 リモートのカレントディレクトリを表示
cd                  リモートのカレント作業ディレクトリを表示
mkdir               リモートのディレクトリを作成
!ls                 ローカルのファイルの一覧を表示
!pwd                ローカルのカレントディレクトリを表示
!cd                 ローカルのカレント作業ディレクトリを移動
get                 ファイルをダウンロード
mget                複数のファイルをダウンロード
put                 ファイルをアップロード
mput                複数のファイルをアップロード
passive             Passiveモードの切り替え
bin /binary         バイナリ転送モードに切り替え
asc /ascii          ASCII転送モードに切り替え
bye /exit /quit     FTPコマンド終了

================ ====================================================

Ubuntuにpukiwikiインストール
====================================

Apach2.4 & PHP インストール
------------------------------------
普通にapt-getする。::

    $ sudo apt-get install apache2
    $ sudo apt-get install php

/var/www/htmlがデフォルトのパブリックフォルダとなっている。apt-getでインストール後は自動的にサーバプロセスが起動する。ブラウザで、::

    http://[サーバー名]/
    http://localhost/index.html

へアクセスし、Apacheのデフォルトページが表示されればOK

PukiWiki1.5.0を設置
------------------------------------
utf8版のPukiWikiを使う。WikiのURLは、http://[サーバー名]/wiki とする。zipファイルなので、unzipする。::

    $ sudo apt-get install unzip
    $ cd /var/www/html/
    $ sudo unzip pukiwiki-1_5_0_utf8.zip
    $ sudo mv pukiwiki-1_5_0_utf8 wiki

Wikiの実効権限をサーバプロセスと同じ、www-dataにする。::

    $ chwon -R www-data.www-data /var/www/html/wiki

これで http://[サーバ名]/wiki にアクセスし、Pukiwikiのデフォルトページが表示される。

http://qiita.com/tuneyukkie/items/e7565fb0856e6a9f517d


Linux ファイルシステム
====================================

/proc
------------------------------------

プロセスやメモリなどのLinuxシステム上のリソース関連情報をあたかもファイルであるかのように配置した
仮想的なファイルシステム、ファイルを読もうとしたときにOSが動的に生成する
大体が読み取り可能だが書き込み可能のものもあって(代表的なものは/proc/sys)
そのファイルを利用すればカーネルのパラメータを変更できる

/procの分類
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
大きくわけて/proc内にはプロセスIDの数字が書かれたディレクトリとLinuxのカーネル内部情報(cpu関連、メモリ関連等)があるpsやunameなどのコマンドが情報を出力する際に直接参照されている。
各ファイルはcatなどで参照できる(/proc/kcoreはメモリのイメージでバイナリなので止めた方がいい)

Linuxのカーネル内部情報
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

=========== ==============================================================================
apm          APMの情報
acpi         ACPI(パソコンの電源管理)の情報
bus          バスの情報を含むディレクトリ
cmdline      カーネルのブートパラメータ
cpuinfo      CPU情報
devices      使用可能なブロック/キャラクタデバイス
dma          DMAチャネル情報
filesystems  サポートするファイルシステム
interrupts   割り込み情報
ioports      I/Oポート情報
iomem        マシンのメモリ使用状況
irq          割り込み情報
kcore        物理メモリのイメージ
kmsg         カーネルのメッセージ
loadavg      負荷情報
locks        カーネル・ロック情報
meminfo      メモリ情報
misc         雑多な情報
modules      ロードされたモジュールの一覧情報
mounts       マウントされたファイルシステムの一覧
net          ネットワークに関する設定を含むディレクトリ
pci          PCIデバイスのリスト
partitions   システムが認識したパーティション情報
scsi         SCSIデバイスの情報を含むディレクトリ
self         カレントプロセスへのシンボリックリンクを含むディレクトリ
stat         カーネル全体の統計情報
slabinfo     スラブキャッシュの状態
swaps        スワップの利用状況
sys          ネットワークやファイル・アクセスなどの設定を含むディレクトリ
uptime       システムの駆動時間
version      Linuxカーネルのバージョン
=========== ==============================================================================

各プロセスIDが書かれたディレクトリ以下
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
=========== ==============================================================================
cmdline     コマンドライン引数
environ     環境変数の値
fd          全てのファイルディスクリプタを含んだディレクトリ
mem         プロセスが保持するメモリ
stat        プロセスの状態
status      statの表示の可読性を高めたもの
cwd         プロセスの現在の作業ディレクトリへのリンク
exe         このプロセスの実行形式へのリンク
maps        メモリマップ
root        該当プロセスへのルートディレクトリへのリンク
statm       プロセスのメモリ状態
=========== ==============================================================================

サーバー管理
====================================

ログイン回避
------------------------------------
アカウントがない状態で、ログインしなければならない場合の対処法について記す。コンソールアクセスが可能で再起動してもいいのであれば、
シングルユーザーモードでブートすればよい。Crtl-Alt-Deleteキーを押した後は単にPOST(Power On Self Test:電源投入時や再起動時に自動的に行われるメモリなどのテスト)が実行されるのを待ち、
カーネルのブート時に **single** というパラメータを渡す。例えば、LILOプロンプトの場合は、::

    LILO: linux singel

でrootのシェルを起動出来るが、RedHatでは使えないときがある。その時は、::

    LIL: linux init=/bin/bash
    # mount -o remount,rw /

とし、起動する。この状態ではネットワークはダウンしており、通常のデーモンは全く起動していないので、パスワードの再設定や1つ2つのファイルに手を加える程度である。
得に、Ctrl-Dや **exit** と入力しない。::
    
    # mount -o remount,ro /

をする必要がある。というのも、initが起動していないため、システムを安全に停止するためにあるプロセスがない。よって読み込み専用でシャットダウンをする。
ブートパラメータは調べるとよりおもしろいので、後で調べる。例えば、::
    
    LILO: linux single init=/bin/bash rw

と表現することも出来る。
